units = "in")
Base.Plot +
geom_hline(lty = 2, yintercept = 1) +
geom_col(data = df4 %>%
mutate(Fold.Avg = Fold.Avg %>% na_if(0)) %>%
#mutate(Fold.Avg = Fold.Avg + 1 * (Fold.Avg == 0)) %>%
filter(MOI != "0", Virus == "GFHK99", Cell == "HTBE"),
position = position_dodge(),
color = "black",
aes(x = MOI,
y = Fold.Avg,
fill = Virus_Cell)) +
geom_errorbar(data = df4 %>%
#mutate(Fold.Avg = Fold.Avg + 1 * (Fold.Avg == 0)) %>%
mutate(Fold.Avg = Fold.Avg %>% na_if(0)) %>%
filter(MOI != "0", Virus == "GFHK99", Cell == "HTBE"),
aes(x = MOI,
ymin = Fold.Avg - Fold.se,
ymax = Fold.Avg + Fold.se),
position = position_dodge2(padding = 0.5),
width = 0.4,
lwd = 0.8) +
geom_jitter(data = df2 %>%
#mutate(Fold = Fold %>% na_if(0)) %>%
filter(MOI != "0", Virus == "GFHK99", Cell == "HTBE"),
aes(x = MOI %>% factor,
y = Fold,
fill = Virus_Cell),
color = "black",
#position_dodge(width = 0.1),
position = position_dodge2(width = 0.9, padding = 0.2),
stroke = 1,
pch = 21) +
scale_y_log10(breaks = c(.0001, .001, 0.01, .1, 1, 10, 100)) +
labs(x = "Helper virus MOI (PFU/cell)",
y = "Fold change relative to WT only") +
coord_cartesian(ylim = c(1,100))
ggsave(file = "Plots/4D_Help_GFHK99_HTBE_Bar.pdf",
height = 5,
width = 5,
units = "in")
Base.Plot +
geom_hline(lty = 2, yintercept = 1) +
geom_col(data = df4 %>%
mutate(Fold.Avg = Fold.Avg %>% na_if(0)) %>%
#mutate(Fold.Avg = Fold.Avg + 1 * (Fold.Avg == 0)) %>%
filter(MOI != "0", Virus == "NL09", Cell == "HTBE"),
position = position_dodge(),
color = "black",
aes(x = MOI,
y = Fold.Avg,
fill = Virus_Cell)) +
geom_errorbar(data = df4 %>%
#mutate(Fold.Avg = Fold.Avg + 1 * (Fold.Avg == 0)) %>%
mutate(Fold.Avg = Fold.Avg %>% na_if(0)) %>%
filter(MOI != "0", Virus == "NL09", Cell == "HTBE"),
aes(x = MOI,
ymin = Fold.Avg - Fold.se,
ymax = Fold.Avg + Fold.se),
position = position_dodge2(padding = 0.5),
width = 0.4,
lwd = 0.8) +
geom_jitter(data = df2 %>%
#mutate(Fold = Fold %>% na_if(0)) %>%
filter(MOI != "0", Virus == "NL09", Cell == "HTBE"),
aes(x = MOI %>% factor,
y = Fold,
fill = Virus_Cell),
color = "black",
#position_dodge(width = 0.1),
position = position_dodge2(width = 0.9, padding = 0.2),
stroke = 1,
pch = 21) +
scale_y_log10(breaks = c(.0001, .001, 0.01, .1, 1, 10, 100)) +
labs(x = "Helper virus MOI (PFU/cell)",
y = "Fold change relative to WT only") +
coord_cartesian(ylim = c(.1,10))
ggsave(file = "Plots/4E_Help_NL09_HTBE_Bar.pdf",
height = 5,
width = 5,
units = "in")
# Legend ----
Legend.Plot = Base.Plot +
geom_point(data = df2,
aes(x = MOI,
y = Fold,
color = Virus_Cell)) +
geom_smooth(data = df2,
aes(x = MOI,
y = Fold,
color = Virus_Cell,
fill = Virus_Cell)) +
labs(color = NULL,
fill = NULL) +
theme(legend.position = "right")
ggsave(g_legend(Legend.Plot),
file = "Plots/Legend_4A.pdf",
height = 4,
width = 2,
units = "in")
Pois_Exp = function(HA) {
lam = -log(1 - HA)
Dual = rep(0,length(HA))
for (i in 1:length(HA)) {
Dual[i] = sum(dpois(x = 1:20, lambda = lam[i]) * (1 - 2 ^ (1 - 1:20)))
}
Dual
}
set.seed(666)
WF10.Segments = c("All GFHK99", "PB2 + PB1 + PA + NP","PB2","PB1","PA","NP","HA + NA + M + NS", "HA", "None, all MaMN99")
Base.Plot = ggplot() +
scale_color_manual(values = c("All GFHK99" = "firebrick3",
"PB2 + PB1 + PA + NP" = "orange",
"PB2" = "darkorchid1",
"PB1" = "green3",
"PA" = "goldenrod",
"NP" = "navy",
"HA" = "steelblue",
"HA + NA + M + NS" = "deepskyblue",
"None, all MaMN99" = "black")) +
scale_fill_manual(values = c("All GFHK99" = "firebrick3",
"PB2 + PB1 + PA + NP" = "orange",
"PB2" = "darkorchid1",
"PB1" = "green3",
"PA" = "goldenrod",
"NP" = "navy",
"HA" = "steelblue",
"HA + NA + M + NS" = "deepskyblue",
"None, all MaMN99" = "black")) +
theme(text=element_text(size=14,face="bold"),
strip.text.x=element_text(size=rel(1.5),margin=margin(0,0,3,0)),
strip.text.y=element_text(size=rel(1.5),margin=margin(0,0,0,0),angle=0),
strip.background = element_blank(),
plot.title = element_text(size=rel(1.5)),
axis.text.x=element_text(angle=0,vjust=0,size=rel(1.5),color = "black"),
axis.text.y=element_text(size=rel(1.5),color = "black"),
axis.line.x = element_line(size=0.5),
axis.line.y = element_line(size=0.5),
axis.ticks.x = element_line(size=0.5, color = "black"),
axis.ticks.y = element_line(size = 0.5, color = "black"),
axis.title.y = element_text(size=rel(1.2),color = "black"),
axis.title.x = element_text(size=rel(1.2)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
legend.position = "NA")
# 3A: % Dual-HA+ vs. % HA+ in 4:4 chimeras ----
KP6 = read.csv(file = file.path(Proj.Home,"Data","3A_3B_Data.csv"), header = TRUE) %>%
na.omit %>%
mutate(Strain = recode(Strain,
"GFHK99" = "All GFHK99",
"MaMN99" = "None, all MaMN99",
"HA_NA_M_NS" = "HA + NA + M + NS",
"3P_NP" = "PB2 + PB1 + PA + NP") %>%
factor(levels = c("All GFHK99",
"PB2 + PB1 + PA + NP",
"PB2",
"PB1",
"PA",
"NP",
"HA + NA + M + NS",
"HA",
"None, all MaMN99")))
Exp_Dual_HA = read.csv(file = file.path(Proj.Home,"Data","Poisson_DualHA_Exp.csv"), header = TRUE)
# 3B: HA co-expression by 4:4 chimeras
Base.Plot +
geom_abline(slope = 1,
color = "dimgray",
lty = 3,
lwd = 1) +
geom_line(data = Exp_Dual_HA ,
aes(x = pHA * 100,
y = pDual * 100),
color = "dimgray",
lty = 2,
lwd = 1) +
annotate("text",x = 80, y = 95,size = 6,label = TeX("\\textbf{x = y}"), color = "dimgray") +
annotate("text",x = 80, y = 5,size = 6,label = TeX("\\textbf{Prediction}"), color = "dimgray") +
geom_smooth(data = KP6 %>% filter(Strain %in% c("All GFHK99",
"PB2 + PB1 + PA + NP",
"HA + NA + M + NS",
"None, all MaMN99")),
aes(x = Expressing_HA,
y = Dual_HA,
color = Strain,
fill = Strain),
method = "rlm",
se = FALSE,
formula = y ~ 0 + I(Pois_Exp(x / 100)) + x) +
geom_point(data = KP6 %>% filter(Strain %in% c("All GFHK99",
"PB2 + PB1 + PA + NP",
"HA + NA + M + NS",
"None, all MaMN99")),
aes(x = Expressing_HA,
y = Dual_HA,
color = Strain)) +
labs(x =  expression(bold("% cells HA"^"+")),
y =  expression(bold("% cells dual-HA"^"+")),
color = "WF10 segments",
fill = "WF10 segments") +
scale_x_continuous(breaks = c(0,25,50,75,100)) +
scale_y_continuous(breaks = c(0,25,50,75,100)) +
coord_cartesian(xlim = c(0,100), ylim = c(0,100))
ggsave('Plots/3A_4_4_HA_Co_Expression.pdf',
width = 4,
height = 4,
unit = "in")
# 3B: HA co-expression by 1:7 chimeras ----
Base.Plot +
geom_abline(slope = 1,
color = "dimgray",
lty = 3,
lwd = 1) +
geom_line(data = Exp_Dual_HA ,
aes(x = pHA * 100,
y = pDual * 100),
color = "dimgray",
lty = 2,
lwd = 1) +
annotate("text",x = 80, y = 95,size = 6,label = TeX("\\textbf{x = y}"), color = "dimgray") +
annotate("text",x = 80, y = 5,size = 6,label = TeX("\\textbf{Prediction}"), color = "dimgray") +
geom_smooth(data = KP6 %>% filter(Strain %in% c("All GFHK99",
"PB2", "PB1", "PA", "NP","HA",
"None, all MaMN99")),
aes(x = Expressing_HA,
y = Dual_HA,
color = Strain,
fill = Strain),
method = "rlm",
se = FALSE,
formula = y ~ 0 + I(Pois_Exp(x / 100)) + x) +
geom_point(data = KP6 %>% filter(Strain %in% c("All GFHK99",
"PB2", "PB1", "PA", "NP","HA",
"None, all MaMN99")),
aes(x = Expressing_HA,
y = Dual_HA,
color = Strain)) +
labs(x =  expression(bold("% cells HA"^"+")),
y =  expression(bold("% cells dual-HA"^"+")),
color = "WF10 segments",
fill = "WF10 segments") +
scale_x_continuous(breaks = c(0,25,50,75,100)) +
scale_y_continuous(breaks = c(0,25,50,75,100)) +
coord_cartesian(xlim = c(0,100), ylim = c(0,100))
ggsave('Plots/3B_1_7_HA_Co_Expression.pdf',
width = 4,
height = 4,
unit = "in")
Legend.3A = ggplot() +
geom_smooth(data = KP6,
aes(x = Expressing_HA,
y = Dual_HA,
color = Strain,
fill = Strain),
method = "rlm",
se = FALSE,
formula = y ~ 0 + I(Pois_Exp(x / 100)) + x) +
geom_point(data = KP6,
aes(x = Expressing_HA,
y = Dual_HA,
color = Strain)) +
labs(x =  expression(bold("% cells HA"^"+")),
y =  expression(bold("% cells dual-HA"^"+")),
color = "GFHK99 segments",
fill = "GFHK99 segments") +
scale_x_continuous(breaks = c(0,25,50,75,100)) +
scale_y_continuous(breaks = c(0,25,50,75,100)) +
scale_color_manual(values = c("All GFHK99" = "firebrick3",
"PB2 + PB1 + PA + NP" = "orange",
"PB2" = "darkorchid1",
"PB1" = "green3",
"PA" = "goldenrod",
"NP" = "navy",
"HA" = "steelblue",
"HA + NA + M + NS" = "deepskyblue",
"None, all MaMN99" = "black")) +
scale_fill_manual(values = c("All GFHK99" = "firebrick3",
"PB2 + PB1 + PA + NP" = "orange",
"PB2" = "darkorchid1",
"PB1" = "green3",
"PA" = "goldenrod",
"NP" = "navy",
"HA" = "steelblue",
"HA + NA + M + NS" = "deepskyblue",
"None, all MaMN99" = "black")) +
coord_cartesian(xlim = c(0,100), ylim = c(0,100)) +
theme(text=element_text(size=14,face="bold"),
strip.text.x=element_text(size=rel(1.5),margin=margin(0,0,3,0)),
strip.text.y=element_text(size=rel(1.5),margin=margin(0,0,0,0),angle=0),
strip.background = element_blank(),
plot.title = element_text(size=rel(1.5)),
axis.text.x=element_text(angle=0,vjust=0,size=rel(1.5),color = "black"),
axis.text.y=element_text(size=rel(1.5),color = "black"),
axis.line.x = element_line(size=0.5),
axis.line.y = element_line(size=0.5),
axis.ticks.x = element_line(size=0.5),
axis.ticks.y = element_line(size = 0.5),
axis.title.y = element_text(size=rel(1.2),color = "black"),
axis.title.x = element_text(size=rel(1.2)),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
ggsave(g_legend(Legend.3A),
file = "Plots/Legend_3A.pdf",
height = 4,
width = 2,
units = "in")
# HA co-expression linearity ----
m2 = lm(formula = Dual_HA ~ 0 + Strain:HA_2 + Strain:HA,
data = KP6 %>% mutate(Dual_HA = Dual_HA / 100, HA = Expressing_HA / 100, HA_2 = Pois_Exp(HA))) %>% summary
s2 = coefficients(m2)
df2 = matrix(nrow = length(levels(KP6$Strain)),
ncol = 3,
data = 0)
df2[,1] = (names(s2[,1]) %>% str_replace("Strain","") %>% str_replace(":HA","") %>% str_replace("_2",""))[1:length(levels(KP6$Strain))]
df2[,2] = as.numeric(s2[1:length(levels(KP6$Strain)),1])
df2[,3] = as.numeric(s2[(1 + length(levels(KP6$Strain))):(length(levels(KP6$Strain)) * 2),1])
df2 = df2 %>% data.frame
colnames(df2) = c("Strain","Pois","Linear")
# Reassortment data ----
PP1_Reassortment = read.csv(file = file.path(Proj.Home,"Data/PP1_Reassortment.csv"))
KP3 = read.csv(file = file.path(Proj.Home,"Data","3C_3D_Data.csv"), header = TRUE) %>%
na.omit %>%
mutate(Strain = recode(Strain,
"GFHK99" = "All GFHK99",
"MaMN99" = "None, all MaMN99",
"HA_NA_M_NS" = "HA + NA + M + NS",
"3P_NP" = "PB2 + PB1 + PA + NP") %>%
factor(levels = c("All GFHK99",
"PB2 + PB1 + PA + NP",
"PB2",
"PB1",
"PA",
"NP",
"HA + NA + M + NS",
"HA",
"None, all MaMN99")))
# 3C: Reassortment of 4:4 chimeras ----
Base.Plot +
geom_point(data = KP3 %>% filter(Strain %in% c("All GFHK99",
"PB2 + PB1 + PA + NP",
"HA + NA + M + NS",
"None, all MaMN99")),
aes(x = Expressing_HA,
y = Reassortment,
color = Strain)) +
geom_smooth(data = KP3%>% filter(Strain %in% c("All GFHK99",
"PB2 + PB1 + PA + NP",
"HA + NA + M + NS",
"None, all MaMN99")),
aes(x = Expressing_HA,
y = Reassortment,
color = Strain),
method = "lm",
se = FALSE,
formula = y ~ log(x)) +
geom_line(data = PP1_Reassortment,
aes(x = Expressing.HA,
y = Reassortant.Percent),
color = "dimgray",
lty = 2,
lwd = 1) +
annotate("text",x = 75, y = 5,size = 6,label = TeX("\\textbf{Prediction}"), color = "dimgray") +
labs(x = expression(bold("% cells HA"^"+")),
y = "% reassortment",
color = "GFHK99 segments") +
scale_x_continuous(breaks = c(0,25,50,75,100)) +
scale_y_continuous(breaks = c(0,25,50,75,100)) +
coord_cartesian(xlim = c(0,100), ylim = c(0,100))
ggsave('Plots/3C_4_4_Reassortment.pdf',
width = 4,
height = 4,
unit = "in")
# 3D: Reassortment of 1:7 chimeras ----
Base.Plot +
geom_point(data = KP3 %>% filter(Strain %in% c("All GFHK99",
"PB2", "PB1", "PA", "NP","HA",
"None, all MaMN99")),
aes(x = Expressing_HA,
y = Reassortment,
color = Strain)) +
geom_smooth(data = KP3 %>% filter(Strain %in% c("All GFHK99",
"PB2", "PB1", "PA", "NP","HA",
"None, all MaMN99")),
aes(x = Expressing_HA,
y = Reassortment,
color = Strain),
method = "lm",
se = FALSE,
formula = y ~ log(x)) +
geom_line(data = PP1_Reassortment,
aes(x = Expressing.HA,
y = Reassortant.Percent),
color = "dimgray",
lty = 2,
lwd = 1) +
annotate("text",x = 75, y = 5,size = 6,label = TeX("\\textbf{Prediction}"), color = "dimgray") +
labs(x = expression(bold("% cells HA"^"+")),
y = "% reassortment",
color = "GFHK99 segments") +
scale_x_continuous(breaks = c(0,25,50,75,100)) +
scale_y_continuous(breaks = c(0,25,50,75,100)) +
coord_cartesian(xlim = c(0,100), ylim = c(0,100))
ggsave('Plots/3D_1_7_Reassortment.pdf',
width = 4,
height = 4,
unit = "in")
KP3 %>% group_by(Strain) %>%
dplyr::summarise(N = length(Expressing_HA))
# Reassortment model ----
m1 = lm(formula = Reassortment ~ 0 + Strain:log(Expressing_HA) + Strain,
data = KP3)
s1 = coefficients(m1)
df1 = matrix(nrow = length(levels(KP3$Strain)),
ncol = 3)
colnames(df1) = c("Strain","Expressing_HA","Reassortment_10")
df1 = data.frame(df1)
df1$Strain = levels(KP3$Strain) %>% factor(levels = c("All GFHK99",
"PB2 + PB1 + PA + NP",
"PB2",
"PB1","PA",
"NP",
"HA + NA + M + NS",
"HA",
"None, all MaMN99") %>% rev)
# 3E: Clustering ----
WF10.Segments = df2$Strain
df2$Reassortment_b0 = s1[1:9]
df2$Reassortment_b1 = s1[10:18]
df4 = df2[,2:5] %>% as.matrix %>% as.numeric %>% matrix(nrow = 9) %>% scale
rownames(df4) = df2$Strain
d = dist(df4, method = "euclidean", diag = TRUE) %>% as.matrix
colnames(d) = WF10.Segments
rownames(d) = WF10.Segments
result = pvclust(d, method.hclust = "ward",
method.dist = "correlation")
ggd1 = result %>% as.dendrogram %>%
sort(type = "labels", decreasing = TRUE) %>%
dendextend::set("labels_cex",.8) %>%
dendextend::set("leaves_pch",16) %>%
as.ggdend
Node.BP = cbind(result$hclust$height,result$edges$au, result$edges$bp) %>% data.frame
colnames(Node.BP) = c("y","au","bp")
Node.Support = full_join(ggd1$nodes %>% filter(y > 0),Node.BP) %>%
dplyr::mutate(AU = (au * 100) %>% round(0) %>% as.character)
ggd1$labels$y = ggd1$labels$y - 0.3
Clusters = cutree(result %>% as.dendrogram %>%
sort(type = "labels", decreasing = TRUE),
k = 2) %>% rev
Clusters = cbind(names(Clusters),Clusters) %>% data.frame
colnames(Clusters) = c("label","cluster")
ggd1$labels = right_join(ggd1$labels,Clusters)
colors.df = cbind(WF10.Segments %>% as.character,
c("firebrick3", "orange","darkorchid1","green3","goldenrod",
"navy","deepskyblue","steelblue","black")) %>% data.frame
colnames(colors.df) = c("label","col")
ggd1$labels = right_join(ggd1$labels %>% dplyr::select(-col),colors.df)
ggd1$nodes = right_join(ggd1$nodes %>% filter(y == 0) %>% dplyr::select(-col,-cex),ggd1$labels %>% dplyr::select(x,label,col))
ggd1$nodes$cex = 3
ggd1$nodes$col = ggd1$nodes$col %>% as.character
Rect_xmin = ggd1$labels %>%
group_by(cluster) %>% dplyr::summarise(xmin = min(x),
xmax = max(x))
xmin = min(c(ggd1$segments$x,ggd1$segments$xend))
xmax = max(c(ggd1$segments$x,ggd1$segments$xend))
ymin = min(c(ggd1$segments$y,ggd1$segments$yend))
ymax = max(c(ggd1$segments$y,ggd1$segments$yend))
Rect_ymax = rev(sort(ggd1$nodes$y))[2]
Rect_ymin = ymin
ggd1$nodes$pch = NA
ggd1$nodes$fill = ggd1$nodes$col
ggplot(ggd1, horiz = TRUE) + theme_dendro() +
theme(text = element_text(size = 16, face = "bold")) +
coord_flip(xlim = c(xmin,xmax),
ylim = c(ymin - 5,ymax)) +
geom_point(data = Node.Support %>% filter(au >= 0.95),
aes(x = x,
y = y),
pch = 21,
stroke = 1,
fill = "yellow",
color = "black",
size = 2) +
geom_point(data = ggd1$nodes, aes(x = x,
y = y,
fill = label),
size = 3,
stroke = 1,
pch = 21) +
scale_fill_manual(values = c("All GFHK99" = "firebrick3",
"PB2 + PB1 + PA + NP" = "orange",
"PB2" = "darkorchid1",
"PB1" = "green3",
"PA" = "goldenrod",
"NP" = "navy",
"HA" = "steelblue",
"HA + NA + M + NS" = "deepskyblue",
"None, all MaMN99" = "black"),
guide = FALSE) +
geom_rect(data = Rect_xmin,
aes(xmin = xmin - 0.3,
xmax = xmax + 0.3),
ymin = Rect_ymin - 2,
ymax = Rect_ymax + 6.5,
fill = NA,
color = "dimgray",
lwd = 1.2,
lty = 8)
ggsave(file = "Plots/3E_Cluster.pdf",
height = 4,
width = 4,
units = "in")
