mutate(Re_mut = w_r * w_t +
(Competition == "Displacement") * (w_r > 1) * w_t * Ie * Pr_Fix -
(Competition == "Displacement") * (w_r < 1) * Ie * Pr_Fix,
R0_mut = w_r * w_t * R0) %>%
filter(Re_mut >= 1)
nrow(Model.Parameters)
head(Model.Parameters)
ggplot() +
geom_tile(data = Model.Parameters,
aes(x = w_r,
y = w_t,
fill = Re_mut)) +
facet_wrap(~Competition)
ggplot() +
geom_tile(data = Model.Parameters,
aes(x = w_t,
y = w_r,
fill = Re_mut)) +
facet_wrap(~Competition)
ggplot() +
geom_tile(data = Model.Parameters,
aes(x = w_t,
y = w_r,
fill = Re_mut)) +
coord_equal(xlim = c(0, 2),
ylim = c(0,2)) +
facet_wrap(~Competition)
ggplot() +
geom_tile(data = Model.Parameters,
aes(x = w_t,
y = w_r,
fill = Re_mut)) +
coord_equal(xlim = c(0, 2),
ylim = c(0,2)) +
scale_fill_viridis_c() +
facet_wrap(~Competition)
ggplot() +
geom_tile(data = H1 %>%
group_by(w_r, w_t) %>%
mutate(Percent = R0_j / sum(R0_j)) %>%
filter(j == 1),
aes(x = w_t,
y = w_r,
fill = R0_j)) +
scale_fill_viridis_c()
ggplot() +
geom_tile(data = Model.Parameters,
aes(x = w_t,
y = w_r,
fill = Re_mut)) +
coord_equal(xlim = c(0, 2),
ylim = c(0,2)) +
scale_fill_viridis_c() +
facet_wrap(~Competition)
ggplot() +
geom_tile(data = H1 %>%
group_by(w_r, w_t) %>%
mutate(Percent = R0_j / sum(R0_j)) %>%
filter(j == 1),
aes(x = w_t,
y = w_r,
fill = R0_j)) +
scale_fill_viridis_c()
ggplot() +
geom_tile(data = H1,
aes(x = w_t,
y = w_r,
fill = R0_j)) +
scale_fill_viridis_c()
ggplot() +
geom_tile(data = H1 %>%
filter(j == 1),
aes(x = w_t,
y = w_r,
fill = R0_j)) +
scale_fill_viridis_c()
ggplot() +
geom_tile(data = H1 %>%
filter(j == 0),
aes(x = w_t,
y = w_r,
fill = R0_j)) +
scale_fill_viridis_c()
ggplot() +
geom_tile(data = H1 %>%
group_by(w_t,w_r) %>%
dplyr::summarise(R0 = sum(R0_j)),
aes(x = w_t,
y = w_r,
fill = R0)) +
scale_fill_viridis_c()
ggplot() +
geom_tile(data = H1 %>%
group_by(w_t,w_r) %>%
dplyr::summarise(R0 = sum(R0_j)) %>%
filter(R0 >= 1),
aes(x = w_t,
y = w_r,
fill = R0)) +
scale_fill_viridis_c()
df1 = H0 %>% filter(t >= 0.5,
Sim <= 10,
(t <= (30)) | (p_mut >= 1.2)) %>%
mutate(t_mut = t_mut / 24)
parameters = expand.grid(B = 1,
j = 0:1,
w_t = seq(from = 0.01, to = 2, by = 0.01)) %>%
filter(j <= B) %>%
mutate(R0_j = 0)
nrow(parameters)
R = df1 %>%
mutate(w_t = parameters[1,"w_t"],
B = parameters[1,"B"],
j = parameters[1,"j"]) %>%
mutate(Pr_j = (p_mut * w_t + p_wt) * dbinom(size = B,
x = j,
prob = (p_mut * w_t) / (p_mut * w_t + p_wt))) %>%
group_by(Sim, t_mut, w_r, w_t, B, j) %>%
dplyr::summarise(R0_j = auc(x = t,
y = Pr_j))
head(df1)
rm(list=ls())
require(dplyr)
require(doMC)
require(stringr)
require(MESS)
Project.Home = "/Users/jacobn07/Weiser_Lab"
p_mut = function(parameters) {
# Extract parameters
# Fixed
Dur_wt = parameters["Dur_wt"] %>% as.numeric
r_wt = parameters["r_wt"] %>% as.numeric
dt = parameters["dt"] %>% as.numeric
K = parameters["K"] %>% as.numeric
t_infectious = parameters["t_infectious"] %>% as.numeric
#Variable
Sim = parameters["Sim"] %>% as.numeric
set.seed(Sim)
t_mut = parameters["t_mut"] %>% as.numeric
Rel_wr = parameters["Rel_wr"] %>% as.numeric
# Derive needed parameters
r_mut = r_wt * Rel_wr
Max_t_wt = Dur_wt             # Max duration of WT infection in days
Max_t_mut = (Dur_wt * Rel_wr) # Max duration of mutant infection in days
Max_t = max(Max_t_wt, Max_t_mut) * 24 / dt # Max duration of infection considered for this mutation (WT if mutant less fit, MUT if mutant more fit)
p_wt = rep(0, Max_t)
p_mut = rep(0, Max_t)
Min_t = t_infectious / dt - 1
t_mut = (t_mut) / dt
# Simulate dynamics
# Pre-mutation
p_wt[Min_t:(t_mut - 1)] = 1
# Mutation
p_mut[t_mut] = 1 / K
p_wt[t_mut] = 1 - p_mut[t_mut]
# Post-mutation
for(t in (t_mut + 1):Max_t) {
p_mut[t] = rbinom(n = 1,
size = K,
prob = Rel_wr * p_mut[t - 1] / (Rel_wr * p_mut[t - 1] + p_wt[t - 1])) / K
p_wt[t] = 1 - p_mut[t]
}
# Return time course of N_wt vs. N_mut
result = cbind(
"Sim" = Sim,
"t" = (1:Max_t) * dt,
"w_r" = Rel_wr,
"t_mut" = t_mut * dt,
"p_wt" = p_wt,
"p_mut" = p_mut) %>%
data.frame %>%
filter(t == floor(t)) %>%
mutate(t = t / 24)
return(result)
}
Increment = 0.05
Max_Ratio = 2
Increment = 0.05
Model.Parameters = expand.grid(Dur_wt = 30,
r_wt = 1.03,
dt = 0.25, # Time increment in hours
K = 1e6, # Carrying capacity of host
t_infectious = 12, # Time in hours that host becomes infectious
Sim = seq(from = 1, to = 20, by = 1),
t_mut = seq(from = 12, to = 29.5 * 24, by = 24), # Time in hours that mutation arises
Rel_wr = seq(from = Increment, to = Max_Ratio, by = Increment))
Sim.Start = Sys.time()
registerDoMC(cores = 8) # Nate Macbook Pro 15"
out = foreach(parameter_set = 1:nrow(Model.Parameters), .combine = rbind) %dopar%
p_mut(parameters = Model.Parameters[parameter_set,]) %>%
data.frame
Sim.End = Sys.time()
Sim.Length = Sim.End - Sim.Start
Sim.Length
source('~/Weiser_Lab/Data_Notebook/Model_11/Branching_Process_Fixation_V3.R', echo=TRUE)
require(ggplot2)
source('~/Weiser_Lab/Data_Notebook/Model_11/Branching_Process_Fixation_V3.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
KG.Plot +
geom_jitter(data = KG.Summary %>%
filter(Virus %in% c("GFHK99","MaMN99","NL09"), Species == "Guinea Pig", Dose == 100) %>% ungroup %>%
dplyr::mutate(Virus = Virus %>% str_replace("WF10","GFHK99")),
aes(x = Day,
y = Simpson,
color = Virus)) +
geom_smooth(data = KG.Summary %>% filter(Virus %in% c("GFHK99","MaMN99","NL09"), Species == "Guinea Pig", Dose == 100) %>% ungroup %>%
dplyr::mutate(Virus = Virus %>% str_replace("WF10","GFHK99")),
aes(x = Day,
y = Simpson,
color = Virus,
fill = Virus,
group = Virus),
method = "rlm") +
labs(x = "Time post-inoculation (days)",
y = TeX("\\textbf{Effective diversity (Hill's $\\N_2$)}")) +
labs(color = "Virus",
fill = "Virus") +
scale_y_continuous(limits = c(0,20), breaks = c(0,5,10,15,20)) +
scale_x_continuous(breaks = 0:4) +
scale_color_manual(values = c("GFHK99" = "skyblue",
"MaMN99" = "green3",
"NL09" = "goldenrod")) +
scale_fill_manual(values = c("GFHK99" = "skyblue",
"MaMN99" = "green3",
"NL09" = "goldenrod")) +
theme(legend.position = "NA")
rlm(formula = Simpson ~ Day,
data = KG.Summary %>% filter(Virus %in% c("GFHK99"), Species == "Guinea Pig", Dose == 100) %>% ungroup %>%
dplyr::mutate(Virus = Virus %>% str_replace("WF10","GFHK99")))
rlm(formula = Simpson ~ Day,
data = KG.Summary %>% filter(Virus %in% c("GFHK99"), Species == "Guinea Pig", Dose == 100) %>% ungroup %>%
dplyr::mutate(Virus = Virus %>% str_replace("WF10","GFHK99"))) %>%
summary
rlm1 = rlm(formula = Simpson ~ Day,
data = KG.Summary %>% filter(Virus %in% c("GFHK99"), Species == "Guinea Pig", Dose == 100) %>% ungroup %>%
dplyr::mutate(Virus = Virus %>% str_replace("WF10","GFHK99")))
newdata = matrix(nrow = 41,
ncol = 1
data = seq(from = 0, to = 4, by = 0.1))
newdata = matrix(nrow = 41,
ncol = 1,
data = seq(from = 0, to = 4, by = 0.1))
colnames$newdata = "Day"
newdata = matrix(nrow = 41,
ncol = 1,
data = seq(from = 0, to = 4, by = 0.1))
newdata = matrix(nrow = 41,
ncol = 1,
data = seq(from = 0, to = 4, by = 0.1))
colnames(newdata) = "Day"
predict(rlm,newdata)
newdata = matrix(nrow = 41,
ncol = 1,
data = seq(from = 0, to = 4, by = 0.1))
colnames(newdata) = "Day"
newdata
rlm1 = rlm(formula = Simpson ~ Day,
data = KG.Summary %>% filter(Virus %in% c("GFHK99"), Species == "Guinea Pig", Dose == 100) %>% ungroup %>%
dplyr::mutate(Virus = Virus %>% str_replace("WF10","GFHK99")))
newdata = matrix(nrow = 41,
ncol = 1,
data = seq(from = 0, to = 4, by = 0.1))
colnames(newdata) = "Day"
predict(rlm1,newdata)
newdata = matrix(nrow = 41,
ncol = 1,
data = seq(from = 0, to = 4, by = 0.1))
colnames(newdata) = "Day"
newdata = data.frame(newdata)
predict(rlm1,newdata)
predict(rlm1,newdata,se = TRUE)
cbind(newdata, predict(rlm1,newdata,se = TRUE))
KG.Predict = cbind(newdata, predict(rlm1,newdata,se = TRUE)) %>%
dplyr::select(Day,fit,se.fit) %>%
mutate(fit.min = fit - se.fit,
fit.max = fit + se.fit)
KG.Predict
ggplot() +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.max))
ggplot() +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.max)) +
coord_cartesian(xlim = c(0, 4),
ylim = c(0,20))
ggplot() +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.max),
lty = 2) +
coord_cartesian(xlim = c(0, 4),
ylim = c(0,20))
ggplot() +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.max),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.min),
lty = 2) +
coord_cartesian(xlim = c(0, 4),
ylim = c(0,20))
ggplot() +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.max),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.min),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit),
lty = 1) +
coord_cartesian(xlim = c(0, 4),
ylim = c(0,20))
KG.Plot +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.max),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.min),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit),
lty = 1) +
coord_cartesian(xlim = c(0, 4),
ylim = c(0,20))
KG.Plot +
geom_smooth(data = KG.Summary %>% filter(Virus %in% c("GFHK99"), Species == "Guinea Pig", Dose == 100) %>% ungroup %>%
dplyr::mutate(Virus = Virus %>% str_replace("WF10","GFHK99")),
aes(x = Day,
y = Simpson,
color = Virus,
fill = Virus,
group = Virus),
method = "rlm") +
labs(x = "Time post-inoculation (days)",
y = TeX("\\textbf{Effective diversity (Hill's $\\N_2$)}")) +
labs(color = "Virus",
fill = "Virus") +
scale_y_continuous(limits = c(0,20), breaks = c(0,5,10,15,20)) +
scale_x_continuous(breaks = 0:4) +
scale_color_manual(values = c("GFHK99" = "skyblue",
"MaMN99" = "green3",
"NL09" = "goldenrod")) +
scale_fill_manual(values = c("GFHK99" = "skyblue",
"MaMN99" = "green3",
"NL09" = "goldenrod")) +
theme(legend.position = "NA")
KG.Plot +
geom_smooth(data = KG.Summary %>% filter(Virus %in% c("GFHK99"), Species == "Guinea Pig", Dose == 100) %>% ungroup %>%
dplyr::mutate(Virus = Virus %>% str_replace("WF10","GFHK99")),
aes(x = Day,
y = Simpson,
color = Virus,
fill = Virus,
group = Virus),
method = "rlm") +
labs(x = "Time post-inoculation (days)",
y = TeX("\\textbf{Effective diversity (Hill's $\\N_2$)}")) +
labs(color = "Virus",
fill = "Virus") +
coord_cartesian(xlim = c(0, 4),
ylim = c(0,20))
KG.Plot +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.max),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.min),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit),
lty = 1) +
coord_cartesian(xlim = c(0, 4),
ylim = c(0,20))
KG.Plot +
geom_smooth(data = KG.Summary %>% filter(Virus %in% c("GFHK99"), Species == "Guinea Pig", Dose == 100) %>% ungroup %>%
dplyr::mutate(Virus = Virus %>% str_replace("WF10","GFHK99")),
aes(x = Day,
y = Simpson,
color = Virus,
fill = Virus,
group = Virus),
method = "rlm") +
labs(x = "Time post-inoculation (days)",
y = TeX("\\textbf{Effective diversity (Hill's $\\N_2$)}")) +
labs(color = "Virus",
fill = "Virus") +
coord_cartesian(xlim = c(0, 4),
ylim = c(0,20)) +
scale_color_manual(values = c("GFHK99" = "skyblue",
"MaMN99" = "green3",
"NL09" = "goldenrod")) +
scale_fill_manual(values = c("GFHK99" = "skyblue",
"MaMN99" = "green3",
"NL09" = "goldenrod")) +
theme(legend.position = "NA")
KG.Plot +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.max),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.min),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit),
lty = 1) +
coord_cartesian(xlim = c(0, 4),
ylim = c(0,20))
KG.Plot +
geom_smooth(data = KG.Summary %>% filter(Virus %in% c("GFHK99"), Species == "Guinea Pig", Dose == 100) %>% ungroup %>%
dplyr::mutate(Virus = Virus %>% str_replace("WF10","GFHK99")),
aes(x = Day,
y = Simpson,
color = Virus,
fill = Virus,
group = Virus),
method = "rlm") +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.max),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.min),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit),
lty = 1) +
labs(x = "Time post-inoculation (days)",
y = TeX("\\textbf{Effective diversity (Hill's $\\N_2$)}")) +
labs(color = "Virus",
fill = "Virus") +
coord_cartesian(xlim = c(0, 4),
ylim = c(0,20)) +
scale_color_manual(values = c("GFHK99" = "skyblue",
"MaMN99" = "green3",
"NL09" = "goldenrod")) +
scale_fill_manual(values = c("GFHK99" = "skyblue",
"MaMN99" = "green3",
"NL09" = "goldenrod")) +
theme(legend.position = "NA")
KG.Predict = cbind(newdata, predict(rlm1,newdata,se = TRUE)) %>%
dplyr::select(Day,fit,se.fit) %>%
mutate(fit.min = fit - 1.96 * se.fit,
fit.max = fit + 1.96 * se.fit)
KG.Predict
KG.Plot +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.max),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.min),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit),
lty = 1) +
coord_cartesian(xlim = c(0, 4),
ylim = c(0,20))
KG.Plot +
geom_smooth(data = KG.Summary %>% filter(Virus %in% c("GFHK99"), Species == "Guinea Pig", Dose == 100) %>% ungroup %>%
dplyr::mutate(Virus = Virus %>% str_replace("WF10","GFHK99")),
aes(x = Day,
y = Simpson,
color = Virus,
fill = Virus,
group = Virus),
method = "rlm") +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.max),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit.min),
lty = 2) +
geom_line(data = KG.Predict,
aes(x = Day,
y = fit),
lty = 1) +
labs(x = "Time post-inoculation (days)",
y = TeX("\\textbf{Effective diversity (Hill's $\\N_2$)}")) +
labs(color = "Virus",
fill = "Virus") +
coord_cartesian(xlim = c(0, 4),
ylim = c(0,20)) +
scale_color_manual(values = c("GFHK99" = "skyblue",
"MaMN99" = "green3",
"NL09" = "goldenrod")) +
scale_fill_manual(values = c("GFHK99" = "skyblue",
"MaMN99" = "green3",
"NL09" = "goldenrod")) +
theme(legend.position = "NA")
